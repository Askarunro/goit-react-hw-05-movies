{"version":3,"file":"static/js/855.a470c8f4.chunk.js","mappings":"yOACA,EAAuB,mBAAvB,EAAiD,mB,SCkCjD,EA5Ba,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBN,GAASO,KAAKH,KACnC,IAEHI,QAAQC,IAAIN,IAGV,eAAIO,UAAWC,EAAf,SACGR,EAAMS,KAAI,SAACC,GAAD,OACT,gBAAkBH,UAAWC,EAA7B,WACE,gBACEG,IACwB,OAAtBD,EAAKE,aAAL,UACOC,GADP,0CAEuCH,EAAKE,cAE9CE,IAAKJ,EAAKK,QAEZ,wBAAKL,EAAKK,QACV,wCAAgBL,EAAKM,eAVdN,EAAKO,W,kOChBhBC,EAAM,2CAEZC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAS,mCAAG,6GAEED,IAAAA,IAAA,4BAA+BD,EAA/B,YAFF,cAEfG,EAFe,yBAGdA,EAASC,KAAKC,SAHA,gCAKrBlB,QAAQC,IAAI,SALS,yDAAH,qDASTkB,EAAe,mCAAG,6GAEJL,IAAAA,IAAA,4BAA+BD,IAF3B,cAErBG,EAFqB,yBAGpBA,EAASC,KAAKG,QAHM,gCAK3BpB,QAAQC,IAAI,SALe,yDAAH,qDASfoB,EAAe,mCAAG,WAAOX,GAAP,gGAEJI,IAAAA,IAAA,wBAA2BD,EAA3B,mBAAyCH,EAAzC,MAFI,cAErBM,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BlB,QAAQC,IAAI,SALe,yDAAH,sDASfqB,EAAc,mCAAG,WAAOV,GAAP,gGAEHE,IAAAA,IAAA,iBAAoBF,EAApB,YAA0BC,IAFvB,cAEpBG,EAFoB,yBAGnBA,EAASC,MAHU,gCAK1BjB,QAAQC,IAAI,SALc,yDAAH,sDASdsB,EAAiB,mCAAG,WAAOX,GAAP,gGAENE,IAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IAF5B,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKZ,MAHQ,gCAK7BL,QAAQC,IAAI,SALiB,yDAAH,sDASjBuB,EAAiB,mCAAG,WAAOZ,GAAP,gGAENE,IAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,IAF5B,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BlB,QAAQC,IAAI,SALiB,yDAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__wM028\",\"item\":\"Cast_item__BhbWF\"};","import { useParams } from \"react-router\";\r\nimport { Link, NavLink, Outlet } from \"react-router-dom\";\r\nimport * as API from \"..//..//services/movies-api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport pnf from \"./error404.jpg\";\r\nimport c from \"./Cast.module.css\";\r\n\r\nconst Cast = () => {\r\n  const { movieId } = useParams();\r\n  const [casts, setCasts] = useState([]);\r\n  useEffect(() => {\r\n    API.fetchMovieCredits(movieId).then(setCasts);\r\n  }, []);\r\n\r\n  console.log(casts);\r\n\r\n  return (\r\n    <ul className={c.list}>\r\n      {casts.map((cast) => (\r\n        <li key={cast.id} className={c.item}>\r\n          <img\r\n            src={\r\n              cast.profile_path === null\r\n                ? `${pnf}`\r\n                : `https://image.tmdb.org/t/p/w200/${cast.profile_path}`\r\n            }\r\n            alt={cast.name}\r\n          />\r\n          <h2>{cast.name}</h2>\r\n          <h3>Character: {cast.character}</h3>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default Cast;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"api_key=5d104e06eaa9cbca519409c6ed30e31b\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const response = await axios.get(`/trending/all/day?${KEY}&page=1`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataGenres = async () => {\r\n  try {\r\n    const response = await axios.get(`/genre/movie/list?${KEY}`);\r\n    return response.data.genres;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataSearch = async (name) => {\r\n  try {\r\n    const response = await axios.get(`/search/movie?${KEY}&query='${name}'`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataMovie = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}?${KEY}`);\r\n    return response.data;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchMovieCredits = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/credits?${KEY}`);\r\n    return response.data.cast;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchMovieReviews = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/reviews?${KEY}`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};"],"names":["movieId","useParams","useState","casts","setCasts","useEffect","API","then","console","log","className","c","map","cast","src","profile_path","pnf","alt","name","character","id","KEY","axios","fetchData","response","data","results","fetchDataGenres","genres","fetchDataSearch","fetchDataMovie","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}