{"version":3,"file":"static/js/319.51aa4f4f.chunk.js","mappings":"0OACA,EAA0B,kCAA1B,EAAoE,gC,SCwEpE,EAnEyB,WACvB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA2BF,EAAAA,EAAAA,UAAS,IAApC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACMC,EAAI,GAkBV,OAhBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAmBX,GAASY,KAAKN,GACjCK,EAAAA,KAAsBC,KAAKR,KAC1B,KAEHM,EAAAA,EAAAA,YAAU,WACUP,EAAOU,SAAQ,SAACC,GAChCT,EAAMF,OAAOY,MAAK,SAACC,GACbA,EAAQC,KAAOH,EAAMG,IACvBR,EAAES,KAAKJ,EAAMK,YAInBX,EAAeC,KACd,CAACJ,KAGF,iCACIA,IAAS,oCACVA,IACC,iCACE,iBAAKe,UAAWC,EAAhB,WACE,gBACEC,IAAKjB,EAAMkB,OAAN,0CAAkDlB,EAAMmB,aAAenB,EAAMoB,kBAEpF,iBAAKL,UAAWC,EAAhB,WACE,wBAAKhB,EAAMkB,MAAQlB,EAAMkB,MAAQlB,EAAMc,QACvC,wCAAgBd,EAAMqB,iBACtB,sCACA,uBAAIrB,EAAMsB,YACV,oCACA,uBACGpB,EAAYqB,KAAI,SAACC,GAAD,OACf,4BACGA,EADH,IACU,SADCA,eAOnB,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAazB,EAAMY,GAAnB,SAAX,qBAEF,yBACE,SAAC,KAAD,CAASa,GAAE,kBAAazB,EAAMY,GAAnB,YAAX,8BAIN,mBACA,SAAC,KAAD,Y,kOChEJc,EAAM,2CAEZC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAS,mCAAG,6GAEED,IAAAA,IAAA,4BAA+BD,EAA/B,YAFF,cAEfG,EAFe,yBAGdA,EAASC,KAAKC,SAHA,gCAKrBC,QAAQC,IAAI,SALS,yDAAH,qDASTC,EAAe,mCAAG,6GAEJP,IAAAA,IAAA,4BAA+BD,IAF3B,cAErBG,EAFqB,yBAGpBA,EAASC,KAAKhC,QAHM,gCAK3BkC,QAAQC,IAAI,SALe,yDAAH,qDASfE,EAAe,mCAAG,WAAOrB,GAAP,gGAEJa,IAAAA,IAAA,wBAA2BD,EAA3B,mBAAyCZ,EAAzC,MAFI,cAErBe,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,QAAQC,IAAI,SALe,yDAAH,sDASfG,EAAc,mCAAG,WAAOxB,GAAP,gGAEHe,IAAAA,IAAA,iBAAoBf,EAApB,YAA0Bc,IAFvB,cAEpBG,EAFoB,yBAGnBA,EAASC,MAHU,gCAK1BE,QAAQC,IAAI,SALc,yDAAH,sDASdI,EAAiB,mCAAG,WAAOzB,GAAP,gGAENe,IAAAA,IAAA,iBAAoBf,EAApB,oBAAkCc,IAF5B,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKQ,MAHQ,gCAK7BN,QAAQC,IAAI,SALiB,yDAAH,sDASjBM,EAAiB,mCAAG,WAAO3B,GAAP,gGAENe,IAAAA,IAAA,iBAAoBf,EAApB,oBAAkCc,IAF5B,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,QAAQC,IAAI,SALiB,yDAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetailsPage_wrapper__nMJht\",\"inner\":\"MovieDetailsPage_inner__NhCk-\"};","import { useParams } from \"react-router\";\r\nimport { NavLink, Outlet } from \"react-router-dom\";\r\nimport * as API from \"..//..//services/movies-api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport d from \"./MovieDetailsPage.module.css\";\r\n\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [genres, setGenres] = useState([]);\r\n  const [movie, setMovies] = useState([]);\r\n  const [movieGenres, setMovieGenres] = useState([]);\r\n  const a = [];\r\n\r\n  useEffect(() => {\r\n    API.fetchDataMovie(movieId).then(setMovies);\r\n    API.fetchDataGenres().then(setGenres);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const genreName = genres.forEach((genre) => {\r\n      movie.genres.find((genreId) => {\r\n        if (genreId.id === genre.id) {\r\n          a.push(genre.name);\r\n        }\r\n      });\r\n    });\r\n    setMovieGenres(a);\r\n  }, [movie]);\r\n\r\n  return (\r\n    <>\r\n      {!movie && <h2>Loading</h2>}\r\n      {movie && (\r\n        <>\r\n          <div className={d.wrapper}>\r\n            <img\r\n              src={movie.title && `https://image.tmdb.org/t/p/w200/${movie.poster_path || movie.backdrop_path}`}\r\n            />\r\n            <div className={d.inner}>\r\n              <h1>{movie.title ? movie.title : movie.name}</h1>\r\n              <p>User Score: {movie.vote_average}</p>\r\n              <h2>Overview</h2>\r\n              <p>{movie.overview}</p>\r\n              <h2>Genres</h2>\r\n              <p>\r\n                {movieGenres.map((item) => (\r\n                  <span key={item}>\r\n                    {item} {\"\\u00A0\"}\r\n                  </span>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div>\r\n            <h2>Additional information</h2>\r\n            <ul>\r\n              <li>\r\n                <NavLink to={`/movies/${movie.id}/cast`}>Cast</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={`/movies/${movie.id}/reviews`}>Reviews</NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <hr />\r\n          <Outlet />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MovieDetailsPage;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"api_key=5d104e06eaa9cbca519409c6ed30e31b\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const response = await axios.get(`/trending/all/day?${KEY}&page=1`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataGenres = async () => {\r\n  try {\r\n    const response = await axios.get(`/genre/movie/list?${KEY}`);\r\n    return response.data.genres;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataSearch = async (name) => {\r\n  try {\r\n    const response = await axios.get(`/search/movie?${KEY}&query='${name}'`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataMovie = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}?${KEY}`);\r\n    return response.data;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchMovieCredits = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/credits?${KEY}`);\r\n    return response.data.cast;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchMovieReviews = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/reviews?${KEY}`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};"],"names":["movieId","useParams","useState","genres","setGenres","movie","setMovies","movieGenres","setMovieGenres","a","useEffect","API","then","forEach","genre","find","genreId","id","push","name","className","d","src","title","poster_path","backdrop_path","vote_average","overview","map","item","to","KEY","axios","fetchData","response","data","results","console","log","fetchDataGenres","fetchDataSearch","fetchDataMovie","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}