{"version":3,"file":"static/js/37.9e3cbb41.chunk.js","mappings":"wOAqDA,EA5CmB,WACjB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoBF,EAAAA,EAAAA,UAAS,IAA7B,eAAOG,EAAP,KAAWC,EAAX,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,MACAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBL,GAAIM,KAAKH,KAE5B,CAACH,IAQJ,OACE,iCACE,kBAAMO,SARG,SAACC,GACZA,EAAEC,iBACFR,EAAMH,GACNC,EAAQ,KAKN,WACE,4BACE,kBACEW,KAAK,OACLZ,KAAK,OACLa,MAAOb,EACPc,QAAQ,0CACRC,MAAM,OACNC,UAAQ,EACRC,SAAU,SAACP,GAAD,OAAOT,EAAQS,EAAEQ,cAAcL,aAG7C,mBAAQD,KAAK,SAAb,uBAEDR,IACC,wBACGA,EAAMe,KAAI,SAACC,GAAD,OACT,eAAkB,UAASA,EAAKlB,GAAhC,UAEA,SAAC,KAAD,CAASmB,GAAE,kBAAaD,EAAKlB,GAAlB,KAAX,SAAqCkB,EAAKL,MAAQK,EAAKL,MAAQK,EAAKpB,QAF3DoB,EAAKlB,c,kOCxCpBoB,EAAM,2CAEZC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAS,mCAAG,6GAEED,IAAAA,IAAA,4BAA+BD,EAA/B,YAFF,cAEfG,EAFe,yBAGdA,EAASC,KAAKC,SAHA,gCAKrBC,QAAQC,IAAI,SALS,yDAAH,qDASTC,EAAe,mCAAG,6GAEJP,IAAAA,IAAA,4BAA+BD,IAF3B,cAErBG,EAFqB,yBAGpBA,EAASC,KAAKK,QAHM,gCAK3BH,QAAQC,IAAI,SALe,yDAAH,qDASfG,EAAe,mCAAG,WAAOhC,GAAP,gGAEJuB,IAAAA,IAAA,wBAA2BD,EAA3B,mBAAyCtB,EAAzC,MAFI,cAErByB,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,QAAQC,IAAI,SALe,yDAAH,sDASfI,EAAc,mCAAG,WAAO/B,GAAP,gGAEHqB,IAAAA,IAAA,iBAAoBrB,EAApB,YAA0BoB,IAFvB,cAEpBG,EAFoB,yBAGnBA,EAASC,MAHU,gCAK1BE,QAAQC,IAAI,SALc,yDAAH,sDASdK,EAAiB,mCAAG,WAAOhC,GAAP,gGAENqB,IAAAA,IAAA,iBAAoBrB,EAApB,oBAAkCoB,IAF5B,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKS,MAHQ,gCAK7BP,QAAQC,IAAI,SALiB,yDAAH,sDASjBO,EAAiB,mCAAG,WAAOlC,GAAP,gGAENqB,IAAAA,IAAA,iBAAoBrB,EAApB,oBAAkCoB,IAF5B,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,QAAQC,IAAI,SALiB,yDAAH","sources":["components/MoviesPage/MoviesPage.js","services/movies-api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\r\nimport * as API from \"..//..//services/movies-api\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { lazy, Suspense } from \"react\";\r\n\r\nconst MovieDetailsPage = lazy(() => {\r\n  return import(\"../MoviesPage\");\r\n});\r\n\r\nconst MoviesPage = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [trend, setTrend] = useState([]);\r\n  useEffect(() => {\r\n    API.fetchDataSearch(id).then(setTrend);\r\n    // console.log(trend);\r\n  }, [id]);\r\n\r\n  const test = (e) => {\r\n    e.preventDefault();\r\n    setId(name);\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={test}>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Z]+(([' -][a-zA-Z])?[a-zA-Z]*)*$\"\r\n            title=\"text\"\r\n            required\r\n            onChange={(e) => setName(e.currentTarget.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      {trend && (\r\n        <ul>\r\n          {trend.map((item) => (\r\n            <li key={item.id} data-id={item.id}>\r\n              {/* <MovieDetailsPage/> */}\r\n            <NavLink to={`/movies/${item.id}/`}>{item.title ? item.title : item.name}</NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default MoviesPage;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"api_key=5d104e06eaa9cbca519409c6ed30e31b\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const response = await axios.get(`/trending/all/day?${KEY}&page=1`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataGenres = async () => {\r\n  try {\r\n    const response = await axios.get(`/genre/movie/list?${KEY}`);\r\n    return response.data.genres;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataSearch = async (name) => {\r\n  try {\r\n    const response = await axios.get(`/search/movie?${KEY}&query='${name}'`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchDataMovie = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}?${KEY}`);\r\n    return response.data;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchMovieCredits = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/credits?${KEY}`);\r\n    return response.data.cast;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const fetchMovieReviews = async (id) => {\r\n  try {\r\n    const response = await axios.get(`/movie/${id}/reviews?${KEY}`);\r\n    return response.data.results;\r\n  } catch {\r\n    console.log(\"error\");\r\n  }\r\n};"],"names":["useState","name","setName","id","setId","trend","setTrend","useEffect","API","then","onSubmit","e","preventDefault","type","value","pattern","title","required","onChange","currentTarget","map","item","to","KEY","axios","fetchData","response","data","results","console","log","fetchDataGenres","genres","fetchDataSearch","fetchDataMovie","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}